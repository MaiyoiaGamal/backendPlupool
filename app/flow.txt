# 🔄 شرح الفلو الكامل لنظام الحجوزات - Plupool Booking Flow

## 📱 من الفرونت إند للباك إند

### 🏠 الصفحة الرئيسية → صفحة الخدمات

```
الصفحة الرئيسية
    ↓
    ├─→ زر "الخدمات" في البار السفلي
    │   ↓
    │   صفحة الخدمات الرئيسية
    │
    └─→ أحد الكروت الثلاثة
        ↓
        صفحة الخدمات الرئيسية
```

---

## 🛠️ صفحة الخدمات الرئيسية

```
صفحة الخدمات
    ├─→ إنشاء حمامات سباحة
    │       ↓
    │   [GET /api/v1/services/pool-types]
    │       ↓
    │   كروت أنواع المسابح
    │       ↓
    │   الضغط على "احجز الآن" في أي كارت
    │       ↓
    │   صفحة بيانات الحجز
    │   (التاريخ، الوقت، أبعاد المسبح، ملاحظات)
    │       ↓
    │   ملء البيانات:
    │   - اختيار اليوم
    │   - اختيار الوقت
    │   - طول حمام السباحة (بالمتر): 7 متر
    │   - عرض حمام السباحة (بالمتر): 4 متر
    │   - عمق حمام السباحة (بالمتر): 2 متر
    │       ↓
    │   [POST /api/v1/bookings/bookings]
    │   {
    │     "booking_type": "construction",
    │     "pool_type_id": 1,
    │     "booking_date": "2025-10-30",
    │     "booking_time": "12:00:00",
    │     "custom_length": 7.0,
    │     "custom_width": 4.0,
    │     "custom_depth": 2.0,
    │     "notes": "أريد المسبح في الحديقة الخلفية"
    │   }
    │       ↓
    │   ✅ تم الحجز (status: pending)
    │       ↓
    │   📧 إشعار للأدمن
    │
    └─→ صيانة حمامات سباحة
            ↓
        تبويبين:
            ├─→ خدمة الصيانة
            │       ↓
            │   [GET /api/v1/services/services?service_type=maintenance]
            │       ↓
            │   كروت خدمات الصيانة
            │   (تنظيف شامل، معالجة المياه، صيانة المعدات، إلخ)
            │       ↓
            │   الضغط على "احجز الآن" في أي كارت
            │       ↓
            │   بوب اب صغير: (التاريخ، الوقت)
            │       ↓
            │   [POST /api/v1/bookings/bookings]
            │   {
            │     "booking_type": "maintenance_single",
            │     "service_id": 1,
            │     "booking_date": "2025-10-30",
            │     "booking_time": "12:00:00"
            │   }
            │       ↓
            │   ✅ تم الحجز (status: pending)
            │       ↓
            │   📧 إشعار للأدمن
            │
            └─→ باقات الخدمات
                    ↓
                [GET /api/v1/services/maintenance-packages]
                    ↓
                3 كروت: (شهري، 4 شهور، سنوي)
                    ↓
                الضغط على "احجز الآن" في أي كارت
                    ↓
                بوب اب: (نوع الباقة، التاريخ، الوقت)
                    ↓
                [POST /api/v1/bookings/bookings]
                {
                  "booking_type": "maintenance_package",
                  "package_id": 1,
                  "booking_date": "2025-10-30",
                  "booking_time": "12:00:00"
                }
                    ↓
                ✅ تم الحجز (status: pending)
                    ↓
                🗓️ النظام يحسب موعد الصيانة القادم تلقائياً
                    ↓
                📧 إشعار للأدمن
```

---

## 👨‍💼 فلو الأدمن

### الحجوزات المعلقة (Pending Bookings)

```
الأدمن يدخل لوحة التحكم
    ↓
[GET /api/v1/bookings/admin/bookings/pending]
    ↓
قائمة بجميع الحجوزات المعلقة
    ↓
الأدمن يختار حجز معين
    ↓
    ├─→ تأكيد الحجز (Confirm)
    │       ↓
    │   [PUT /api/v1/bookings/admin/bookings/{id}]
    │   {
    │     "status": "confirmed",
    │     "admin_notes": "تم التأكيد",
    │     "next_maintenance_date": "2025-11-30"  // للباقات فقط
    │   }
    │       ↓
    │   ✅ تحديث حالة الحجز
    │       ↓
    │   📱 إشعار للمستخدم: "تم تأكيد حجزك"
    │
    ├─→ رفض الحجز (Cancel)
    │       ↓
    │   [PUT /api/v1/bookings/admin/bookings/{id}]
    │   {
    │     "status": "cancelled",
    │     "admin_notes": "عذراً، الموعد غير متاح"
    │   }
    │       ↓
    │   ❌ إلغاء الحجز
    │       ↓
    │   📱 إشعار للمستخدم: "تم إلغاء حجزك"
    │
    └─→ جاري التنفيذ (In Progress)
            ↓
        [PUT /api/v1/bookings/admin/bookings/{id}]
        {
          "status": "in_progress",
          "admin_notes": "الفني في الطريق"
        }
            ↓
        🚗 جاري التنفيذ
            ↓
        📱 إشعار للمستخدم
```

---

## 🔔 نظام التذكيرات للباقات

### كيف يعمل نظام التذكيرات:

```
1. المستخدم يحجز باقة (شهري/4 شهور/سنوي)
    ↓
2. النظام يحسب موعد الصيانة القادم:
   - إذا كانت الباقة شهرية → بعد 30 يوم
   - إذا كانت الباقة 4 شهور → بعد 30 يوم (أول صيانة)
   - إذا كانت الباقة سنوية → بعد 30 يوم (أول صيانة)
    ↓
3. يتم تخزين next_maintenance_date في جدول bookings
    ↓
4. المستخدم يستطيع رؤية تذكيراته:
   [GET /api/v1/bookings/bookings/my-reminders]
    ↓
5. النظام يعرض المواعيد القادمة خلال الأسبوع
    ↓
6. في المستقبل:
   - Celery Task تشتغل كل يوم
   - تفحص المواعيد القادمة
   - ترسل إشعار للمستخدم قبل الموعد بـ 3 أيام
```

---

## 📊 حالات الحجز (Booking Status)

```
pending        → في انتظار موافقة الأدمن (أصفر 🟡)
    ↓
confirmed      → تم التأكيد من الأدمن (أخضر 🟢)
    ↓
in_progress    → جاري التنفيذ (أزرق 🔵)
    ↓
completed      → تم الانتهاء (أخضر غامق 🟢🟢)

cancelled      → ملغي (أحمر 🔴)
```

---

## 🎯 الفرق بين أنواع الحجوزات

### 1. حجز إنشاء مسبح (Construction)
```json
{
  "booking_type": "construction",
  "pool_type_id": 1,
  "booking_date": "2025-10-30",
  "booking_time": "12:00:00"
}
```
- **المميزات**: حجز لمرة واحدة
- **التذكيرات**: ❌ لا يوجد
- **الفلو**: حجز → موافقة أدمن → تنفيذ → انتهاء

---

### 2. حجز صيانة مفردة (Maintenance Single)
```json
{
  "booking_type": "maintenance_single",
  "service_id": 1,
  "booking_date": "2025-10-30",
  "booking_time": "12:00:00"
}
```
- **المميزات**: حجز لمرة واحدة
- **التذكيرات**: ❌ لا يوجد
- **الفلو**: حجز → موافقة أدمن → تنفيذ → انتهاء

---

### 3. حجز باقة صيانة (Maintenance Package) ⭐
```json
{
  "booking_type": "maintenance_package",
  "package_id": 1,
  "booking_date": "2025-10-30",
  "booking_time": "12:00:00"
}
```
- **المميزات**: 
  - باقة متكررة (شهري/4 شهور/سنوي)
  - تذكيرات تلقائية
  - مواعيد صيانة دورية
- **التذكيرات**: ✅ يوجد
- **الفلو**: 
  ```
  حجز باقة
     ↓
  موافقة أدمن
     ↓
  تحديد موعد الصيانة القادم
     ↓
  التذكير قبل الموعد بـ 3 أيام
     ↓
  تنفيذ الصيانة
     ↓
  تحديث موعد الصيانة القادم
     ↓
  (يتكرر حسب عدد الزيارات في الباقة)
  ```

---

## 📱 مثال عملي كامل

### المستخدم: أحمد يريد باقة صيانة شهرية

```
1. أحمد يفتح التطبيق
2. يضغط على "الخدمات" من البار السفلي
3. يختار "صيانة حمامات سباحة"
4. يفتح تبويب "باقات الخدمات"
5. يشوف 3 كروت: شهري - 4 شهور - سنوي
6. يضغط "احجز الآن" على الباقة الشهرية
7. يظهر بوب اب:
   - نوع الباقة: الباقة الشهرية ✅
   - التاريخ: 30/10/2025
   - الوقت: 12:00 PM
8. يضغط "تأكيد الحجز"
9. يرسل POST request:
   ```json
   POST /api/v1/bookings/bookings
   {
     "booking_type": "maintenance_package",
     "package_id": 1,
     "booking_date": "2025-10-30",
     "booking_time": "12:00:00",
     "notes": "أريد الباقة الشهرية"
   }
   ```
10. الباك إند:
    - يتحقق من وجود الباقة ✅
    - يحسب موعد الصيانة القادم: 30/11/2025
    - يحفظ الحجز بحالة "pending"
    - يرسل إشعار للأدمن 📧
11. أحمد يشوف رسالة: "تم إرسال طلبك بنجاح، في انتظار التأكيد"
12. الأدمن يفتح لوحة التحكم
13. يشوف حجز أحمد في "الحجوزات المعلقة"
14. يضغط "تأكيد الحجز"
15. يرسل PUT request:
    ```json
    PUT /api/v1/bookings/admin/bookings/123
    {
      "status": "confirmed",
      "admin_notes": "تم التأكيد، سيتواصل معك الفني",
      "next_maintenance_date": "2025-11-30"
    }
    ```
16. أحمد يحصل على إشعار: "تم تأكيد حجزك! 🎉"
17. في 27/11/2025 (قبل الموعد بـ 3 أيام):
    - أحمد يفتح التطبيق
    - يشوف تذكير: "لديك صيانة قادمة في 30/11/2025"
18. في 30/11/2025:
    - الفني يأتي وينفذ الصيانة
    - الأدمن يحدث الحالة: "completed"
    - النظام يحدث موعد الصيانة القادم: 30/12/2025
19. وهكذا يتكرر كل شهر... 🔄
```

---

## 🎨 UI Components المطلوبة

### 1. صفحة الخدمات الرئيسية
```
┌─────────────────────────────────┐
│  🛠️ خدمة الصيانة               │
│  🔧 صيانة حمام سباحة تشمل      │
└─────────────────────────────────┘

┌─────────────────────────────────┐
│  📦 باقات الخدمات               │
│  ✨ باقات الخدمات               │
└─────────────────────────────────┘
```

### 2. كروت الخدمات
```
┌───────────────────────────────┐
│  🧹 تنظيف شامل               │
│  تنظيف شامل للمسبح وإزالة    │
│  الأوساخ والطحالب            │
│                               │
│  السعر: 500 جنيه             │
│  [      احجز الآن     ]      │
└───────────────────────────────┘
```

### 3. بوب اب الحجز
```
┌─────────────────────────────────┐
│  ✅ تأكيد حجز خدمة الصيانة     │
│                                 │
│  صيانة دورية للحفاظ على نقاء   │
│  وأمان حمام السباحة الخاص بك.  │
│                                 │
│  📅 التاريخ                     │
│  [  31/10/2025  📅  ]          │
│                                 │
│  🕐 الوقت                       │
│  [  12:00 PM    🕐  ]          │
│                                 │
│  [  تعديل  ]  [ تأكيد الحجز ] │
└─────────────────────────────────┘
```

### 3.5 بوب اب حجز إنشاء مسبح (مع الأبعاد)
```
┌─────────────────────────────────┐
│  ✅ إملأ النموذج للتواصل وحجز   │
│  موعد إنشاء حمام السباحة       │
│  الخاص بك                       │
│                                 │
│  📅 اختيار اليوم                │
│  [  30/10/2025  📅  ]          │
│                                 │
│  🕐 اختيار الوقت                │
│  [  03:00 PM    🕐  ]          │
│                                 │
│  📏 طول حمام السباحة (بالمتر)   │
│  [  7 متر   ⬆️⬇️  ]           │
│                                 │
│  📐 عرض حمام السباحة (بالمتر)   │
│  [  4 متر   ⬅️➡️  ]           │
│                                 │
│  📊 عمق حمام السباحة (بالمتر)   │
│  [  2 متر   📏  ]              │
│                                 │
│  [      تأكيد الحجز      ]     │
│  [         إلغاء         ]     │
└─────────────────────────────────┘
```

### 4. بوب اب حجز الباقة
```
┌─────────────────────────────────┐
│  ✅ تأكيد حجز الباقة الشهرية   │
│                                 │
│  🎯 نوع الباقة                 │
│  [  الباقة الشهرية  💎  ]     │
│                                 │
│  📅 التاريخ                     │
│  [  30/10/2025  📅  ]          │
│                                 │
│  🕐 الوقت                       │
│  [  12:00 PM    🕐  ]          │
│                                 │
│  [  تعديل  ]  [ تأكيد الحجز ] │
└─────────────────────────────────┘
```

### 5. صفحة حجوزاتي
```
┌─────────────────────────────────┐
│  📋 حجوزاتي                     │
├─────────────────────────────────┤
│  🟡 في انتظار التأكيد           │
│  تنظيف شامل                     │
│  30/10/2025 - 12:00 PM         │
├─────────────────────────────────┤
│  🟢 مؤكد                        │
│  الباقة الشهرية                │
│  15/11/2025 - 10:00 AM         │
├─────────────────────────────────┤
│  🔵 جاري التنفيذ                │
│  معالجة المياه                 │
│  20/11/2025 - 02:00 PM         │
└─────────────────────────────────┘
```

### 6. صفحة التذكيرات
```
┌─────────────────────────────────┐
│  🔔 تذكيرات الصيانة             │
├─────────────────────────────────┤
│  ⚠️ خلال 3 أيام                │
│  الباقة الشهرية                │
│  30/11/2025 - 12:00 PM         │
│  [    عرض التفاصيل    ]        │
├─────────────────────────────────┤
│  📅 خلال أسبوع                 │
│  الباقة الشهرية                │
│  05/12/2025 - 10:00 AM         │
│  [    عرض التفاصيل    ]        │
└─────────────────────────────────┘
```

---

## 🔧 التكامل مع الكود الموجود

### تحديث ملف `main.py`
```python
from fastapi import FastAPI
from fastapi.middleware.cors import CORSMiddleware
from app.api.v1.api import api_router
from app.core.config import settings

app = FastAPI(
    title=settings.APP_NAME,
    version=settings.APP_VERSION,
    description="Plupool Backend API with Services & Bookings"
)

# CORS
app.add_middleware(
    CORSMiddleware,
    allow_origins=settings.ALLOWED_ORIGINS,
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# Include API router
app.include_router(api_router, prefix="/api/v1")

@app.get("/")
def root():
    return {
        "message": "Welcome to Plupool API",
        "version": settings.APP_VERSION,
        "docs": "/docs"
    }
```

---

## 📝 ملاحظات مهمة

### ⚠️ نقاط يجب الانتباه لها:

1. **التحقق من الصلاحيات**:
   ```python
   # في كل endpoint للأدمن، يجب التحقق:
   if current_user.role != "admin":
       raise HTTPException(403, "غير مصرح")
   ```

2. **التحقق من التاريخ والوقت**:
   ```python
   # يجب أن يكون التاريخ في المستقبل
   if booking_date < datetime.now().date():
       raise HTTPException(400, "التاريخ يجب أن يكون في المستقبل")
   ```

3. **التحقق من تعارض المواعيد**:
   ```python
   # للأدمن: التحقق من عدم وجود حجزين في نفس الوقت
   existing = db.query(Booking).filter(
       Booking.booking_date == booking_date,
       Booking.booking_time == booking_time,
       Booking.status.in_(["confirmed", "in_progress"])
   ).first()
   if existing:
       raise HTTPException(409, "هذا الموعد محجوز بالفعل")
   ```

4. **حساب موعد الصيانة القادم للباقات**:
   ```python
   def calculate_next_maintenance(booking_date, package_duration):
       if package_duration == PackageDuration.MONTHLY:
           return booking_date + timedelta(days=30)
       elif package_duration == PackageDuration.QUARTERLY:
           return booking_date + timedelta(days=30)  # أول صيانة بعد شهر
       elif package_duration == PackageDuration.YEARLY:
           return booking_date + timedelta(days=30)  # أول صيانة بعد شهر
   ```

---

## 🚀 خطوات التنفيذ النهائية

### 1️⃣ إنشاء الجداول
```bash
python create_tables.py
```

### 2️⃣ إضافة البيانات التجريبية
```bash
python seed_data.py
```

### 3️⃣ تشغيل السيرفر
```bash
python -m uvicorn app.main:app --reload
```

### 4️⃣ اختبار APIs
افتح: **http://127.0.0.1:8000/docs**

### 5️⃣ اختبار الفلو كامل:
1. سجل دخول كمستخدم
2. اعرض الخدمات: `GET /api/v1/services/services?service_type=maintenance`
3. احجز خدمة: `POST /api/v1/bookings/bookings`
4. اعرض حجوزاتك: `GET /api/v1/bookings/bookings/my-bookings`
5. سجل دخول كأدمن
6. اعرض الحجوزات المعلقة: `GET /api/v1/bookings/admin/bookings/pending`
7. أكد الحجز: `PUT /api/v1/bookings/admin/bookings/{id}`
8. ارجع للمستخدم واعرض التذكيرات: `GET /api/v1/bookings/bookings/my-reminders`

---

## 🎉 تم الانتهاء!

النظام الآن جاهز ويشمل:
- ✅ الخدمات (الصيانة)
- ✅ أنواع المسابح (الإنشاء)
- ✅ الباقات (شهري/4 شهور/سنوي)
- ✅ الحجوزات
- ✅ نظام التذكيرات
- ✅ لوحة تحكم الأدمن
- ✅ التوثيق الكامل

**يلا نشغل ونجرب! 🚀🏊‍♂️**